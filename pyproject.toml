[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta" # If not defined, then legacy behavior can happen.

[project]
name = "tiny_trainer"
version = "0.0.1"
description = "A sample Pytorch trainer"
# readme = "README.md"
requires-python = ">=3.9"
# license = { file = "LICENSE.txt" }
# keywords = ["sample", "setuptools", "development"]
# authors = [{ name = "A. Random Developer", email = "author@example.com" }]
# maintainers = [
#  { name = "A. Great Maintainer", email = "maintainer@example.com" },
# ]

# classifiers = []
dependencies = []

# List additional groups of dependencies here (e.g. development
# dependencies). Users will be able to install these using the "extras"
# syntax, for example:
#
#   $ pip install sampleproject[dev]
#
# Optional dependencies the project provides. These are commonly
# referred to as "extras". For a more extensive definition see:
# https://packaging.python.org/en/latest/specifications/dependency-specifiers/#extras
# [project.optional-dependencies]
# dev = ["check-manifest"]
# test = ["coverage"]

# [project.urls]
# sample = "sample:main"